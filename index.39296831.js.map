{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCMA,SAAS,EAAmB,CAAK,CAAE,CAAW,CAAE,CAAI,EAClD,IAAM,EAAU,SAAS,aAAa,CAAC,OACjC,EAAe,SAAS,aAAa,CAAC,MACtC,EAAqB,SAAS,aAAa,CAAC,KAalD,OAXA,EAAQ,OAAO,CAAC,EAAE,CAAG,eAErB,EAAQ,SAAS,CAAC,GAAG,CAAC,eAAgB,GACtC,EAAa,SAAS,CAAC,GAAG,CAAC,SAE3B,EAAa,SAAS,CAAG,EACzB,EAAmB,SAAS,CAAG,EAC/B,EAAa,KAAK,CAAC,UAAU,CAAG,SAEhC,EAAQ,MAAM,CAAC,EAAc,GAEtB,CACT,CAEA,SAAS,EAAiB,CAAO,EAC/B,SAAS,IAAI,CAAC,MAAM,CAAC,GAErB,WAAW,WACT,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC1B,EAAG,IACL,CA4CA,IAzCM,EACA,EAwCA,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,EAAM,aAAa,CAAC,SAChC,EAAY,EAAM,aAAa,CAAC,SAEhC,GA7CA,EAAa,KACb,EAAa,CAAA,EAEV,SAAC,CAAR,EACE,GAAI,AAAqB,OAArB,EAAE,MAAM,CAAC,OAAO,EAKlB,EADE,IAAe,EAAE,MAAM,EACZ,CAAC,EAKhB,EAAa,EAAE,MAAM,CAErB,I,EAAM,EAAe,EAAE,MAAM,CAAC,SAAS,CACjC,EAAgB,AAAiB,IAAjB,GAAsB,AAAiB,IAAjB,EAoB5C,AAlBoB,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,EAAU,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAO,IAAI,CAC3D,SAAC,CAAA,CAAM,CADT,EAEI,IAAM,EAAQ,E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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction formatNumberWithCommas(value) {\n    return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nfunction createNotification(title, description, type) {\n    var message = document.createElement(\"div\");\n    var titleElement = document.createElement(\"h2\");\n    var descriptionElement = document.createElement(\"p\");\n    message.dataset.qa = \"notification\";\n    message.classList.add(\"notification\", type);\n    titleElement.classList.add(\"title\");\n    titleElement.innerText = title;\n    descriptionElement.innerText = description;\n    titleElement.style.whiteSpace = \"nowrap\";\n    message.append(titleElement, descriptionElement);\n    return message;\n}\nfunction pushNotification(message) {\n    document.body.append(message);\n    setTimeout(function() {\n        message.style.display = \"none\";\n    }, 6000);\n}\nfunction createSortHandler() {\n    var prevHeader = null;\n    var isASCOrder = true;\n    return function(e) {\n        if (e.target.tagName !== \"TH\") return;\n        if (prevHeader === e.target) isASCOrder = !isASCOrder;\n        else isASCOrder = true;\n        prevHeader = e.target;\n        var clickedIndex = e.target.cellIndex;\n        var isNumericSort = clickedIndex === 3 || clickedIndex === 4;\n        var sortedRows = _to_consumable_array(tableBody.querySelectorAll(\"tr\")).sort(function(rowA, rowB) {\n            var cellA = rowA.children[clickedIndex].textContent.trim();\n            var cellB = rowB.children[clickedIndex].textContent.trim();\n            var compareResult = 0;\n            if (isNumericSort) compareResult = +cellA.replace(/\\D+/g, \"\") - +cellB.replace(/\\D+/g, \"\");\n            else compareResult = cellA.localeCompare(cellB);\n            return isASCOrder ? compareResult : -compareResult;\n        });\n        sortedRows.forEach(function(row) {\n            return tableBody.append(row);\n        });\n    };\n}\nvar table = document.querySelector(\"table\");\nvar tableHead = table.querySelector(\"thead\");\nvar tableBody = table.querySelector(\"tbody\");\nvar sortHandler = createSortHandler();\ntableHead.addEventListener(\"click\", sortHandler);\nvar formHtml = '\\n  <form class=\"new-employee-form\">\\n    <label>\\n      Name:\\n      <input type=\"text\" data-qa=\"name\" required>\\n    </label>\\n    <label>\\n      Position:\\n      <input type=\"text\" data-qa=\"position\" required>\\n    </label>\\n    <label>\\n      Office:\\n      <select data-qa=\"office\" required></select>\\n    </label>\\n    <label>\\n      Age:\\n      <input type=\"number\" data-qa=\"age\" min=\"0\" required>\\n    </label>\\n    <label>\\n      Salary:\\n      <input type=\"number\" data-qa=\"salary\" min=\"0\" required>\\n    </label>\\n    <button type=\"submit\">Save to table</button>\\n  </form>\\n';\ndocument.body.insertAdjacentHTML(\"beforeend\", formHtml);\nvar selectOptions = [\n    {\n        value: \"Tokyo\",\n        text: \"Tokyo\"\n    },\n    {\n        value: \"Singapore\",\n        text: \"Singapore\"\n    },\n    {\n        value: \"London\",\n        text: \"London\"\n    },\n    {\n        value: \"New-York\",\n        text: \"New York\"\n    },\n    {\n        value: \"Edinburgh\",\n        text: \"Edinburgh\"\n    },\n    {\n        value: \"San-Francisco\",\n        text: \"San Francisco\"\n    }\n];\nvar selectOffice = document.querySelector('select[data-qa=\"office\"]');\nvar optionsHtml = selectOptions.map(function(city) {\n    return '<option value=\"'.concat(city.value, '\">').concat(city.text, \"</option>\");\n}).join(\"\");\nselectOffice.innerHTML = optionsHtml;\nvar newEmployeeForm = document.querySelector(\".new-employee-form\");\nvar inputName = newEmployeeForm.querySelector('input[data-qa=\"name\"]');\nvar inputPos = newEmployeeForm.querySelector('input[data-qa=\"position\"]');\nvar selectCity = newEmployeeForm.querySelector('select[data-qa=\"office\"]');\nvar inputAge = newEmployeeForm.querySelector('input[data-qa=\"age\"]');\nvar inputSalary = newEmployeeForm.querySelector('input[data-qa=\"salary\"]');\nvar submitBtn = newEmployeeForm.querySelector(\"button\");\nsubmitBtn.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    if (inputName.value.trim().length < 4) {\n        var errorMessage = createNotification(\"Error\", \"Name must be at least 4 letters long\", \"error\");\n        pushNotification(errorMessage);\n        return;\n    }\n    if (inputPos.value.trim().length === 0) {\n        var errorMessage1 = createNotification(\"Error\", \"Invalid position\", \"error\");\n        pushNotification(errorMessage1);\n        return;\n    }\n    if (inputAge.value.trim().length === 0) {\n        var errorMessage2 = createNotification(\"Error\", \"Please enter the employee's age\", \"error\");\n        pushNotification(errorMessage2);\n        return;\n    }\n    var age = parseInt(inputAge.value);\n    if (age < 18 || age > 90) {\n        var errorMessage3 = createNotification(\"Error\", \"The employee must be between 18 and 90 years old\", \"error\");\n        pushNotification(errorMessage3);\n        return;\n    }\n    if (inputSalary.value.trim().length === 0) {\n        var errorMessage4 = createNotification(\"Error\", \"Please enter the employee's salary\", \"error\");\n        pushNotification(errorMessage4);\n        return;\n    }\n    var salary = parseInt(inputSalary.value);\n    if (salary < 0) {\n        var errorMessage5 = createNotification(\"Error\", \"Salary cannot be a negative number\", \"error\");\n        pushNotification(errorMessage5);\n        return;\n    }\n    var rowHtml = \"\\n  <tr>\\n    <td>\".concat(inputName.value, \"</td>\\n    <td>\").concat(inputPos.value, \"</td>\\n    <td>\").concat(selectCity.value.split(\"-\").join(\" \"), \"</td>\\n    <td>\").concat(inputAge.value, \"</td>\\n    <td>$\").concat(formatNumberWithCommas(inputSalary.value), \"</td>\\n  </tr>\\n\");\n    tableBody.insertAdjacentHTML(\"beforeend\", rowHtml);\n    newEmployeeForm.reset();\n    var message = createNotification(\"Success\", \"Employee was successfully added\", \"success\");\n    pushNotification(message);\n});\ntableBody.addEventListener(\"click\", function(e) {\n    var selectedRow = e.target.closest(\"tr\");\n    var bodyRows = tableBody.querySelectorAll(\"tr\");\n    bodyRows.forEach(function(row) {\n        return row.classList.remove(\"active\");\n    });\n    selectedRow.classList.add(\"active\");\n});\ntableBody.addEventListener(\"dblclick\", function(e) {\n    if (e.target.tagName === \"TD\") {\n        var input = document.createElement(\"input\");\n        var currText = e.target.textContent;\n        input.type = \"text\";\n        input.classList.add(\"cell-input\");\n        input.value = currText;\n        e.target.textContent = \"\";\n        e.target.append(input);\n        input.focus();\n        input.addEventListener(\"blur\", function() {\n            e.target.textContent = input.value || currText;\n            input.remove();\n        });\n        input.addEventListener(\"keypress\", function(keyPressEvent) {\n            if (keyPressEvent.key === \"Enter\") {\n                e.target.textContent = input.value || currText;\n                input.remove();\n            }\n        });\n    }\n});\n\n//# sourceMappingURL=index.39296831.js.map\n","'use strict';\n\nfunction formatNumberWithCommas(value) {\n  return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction createNotification(title, description, type) {\n  const message = document.createElement('div');\n  const titleElement = document.createElement('h2');\n  const descriptionElement = document.createElement('p');\n\n  message.dataset.qa = 'notification';\n\n  message.classList.add('notification', type);\n  titleElement.classList.add('title');\n\n  titleElement.innerText = title;\n  descriptionElement.innerText = description;\n  titleElement.style.whiteSpace = 'nowrap';\n\n  message.append(titleElement, descriptionElement);\n\n  return message;\n}\n\nfunction pushNotification(message) {\n  document.body.append(message);\n\n  setTimeout(() => {\n    message.style.display = 'none';\n  }, 6000);\n}\n\nfunction createSortHandler() {\n  let prevHeader = null;\n  let isASCOrder = true;\n\n  return (e) => {\n    if (e.target.tagName !== 'TH') {\n      return;\n    }\n\n    if (prevHeader === e.target) {\n      isASCOrder = !isASCOrder;\n    } else {\n      isASCOrder = true;\n    }\n\n    prevHeader = e.target;\n\n    const clickedIndex = e.target.cellIndex;\n    const isNumericSort = clickedIndex === 3 || clickedIndex === 4;\n\n    const sortedRows = [...tableBody.querySelectorAll('tr')].sort(\n      (rowA, rowB) => {\n        const cellA = rowA.children[clickedIndex].textContent.trim();\n        const cellB = rowB.children[clickedIndex].textContent.trim();\n\n        let compareResult = 0;\n\n        if (isNumericSort) {\n          compareResult =\n            +cellA.replace(/\\D+/g, '') - +cellB.replace(/\\D+/g, '');\n        } else {\n          compareResult = cellA.localeCompare(cellB);\n        }\n\n        return isASCOrder ? compareResult : -compareResult;\n      },\n    );\n\n    sortedRows.forEach((row) => tableBody.append(row));\n  };\n}\n\nconst table = document.querySelector('table');\nconst tableHead = table.querySelector('thead');\nconst tableBody = table.querySelector('tbody');\n\nconst sortHandler = createSortHandler();\n\ntableHead.addEventListener('click', sortHandler);\n\nconst formHtml = `\n  <form class=\"new-employee-form\">\n    <label>\n      Name:\n      <input type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>\n      Position:\n      <input type=\"text\" data-qa=\"position\" required>\n    </label>\n    <label>\n      Office:\n      <select data-qa=\"office\" required></select>\n    </label>\n    <label>\n      Age:\n      <input type=\"number\" data-qa=\"age\" min=\"0\" required>\n    </label>\n    <label>\n      Salary:\n      <input type=\"number\" data-qa=\"salary\" min=\"0\" required>\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`;\n\ndocument.body.insertAdjacentHTML('beforeend', formHtml);\n\nconst selectOptions = [\n  { value: 'Tokyo', text: 'Tokyo' },\n  { value: 'Singapore', text: 'Singapore' },\n  { value: 'London', text: 'London' },\n  { value: 'New-York', text: 'New York' },\n  { value: 'Edinburgh', text: 'Edinburgh' },\n  { value: 'San-Francisco', text: 'San Francisco' },\n];\n\nconst selectOffice = document.querySelector('select[data-qa=\"office\"]');\n\nconst optionsHtml = selectOptions\n  .map((city) => `<option value=\"${city.value}\">${city.text}</option>`)\n  .join('');\n\nselectOffice.innerHTML = optionsHtml;\n\nconst newEmployeeForm = document.querySelector('.new-employee-form');\nconst inputName = newEmployeeForm.querySelector('input[data-qa=\"name\"]');\nconst inputPos = newEmployeeForm.querySelector('input[data-qa=\"position\"]');\nconst selectCity = newEmployeeForm.querySelector('select[data-qa=\"office\"]');\nconst inputAge = newEmployeeForm.querySelector('input[data-qa=\"age\"]');\nconst inputSalary = newEmployeeForm.querySelector('input[data-qa=\"salary\"]');\nconst submitBtn = newEmployeeForm.querySelector('button');\n\nsubmitBtn.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  if (inputName.value.trim().length < 4) {\n    const errorMessage = createNotification(\n      'Error',\n      'Name must be at least 4 letters long',\n      'error',\n    );\n\n    pushNotification(errorMessage);\n\n    return;\n  }\n\n  if (inputPos.value.trim().length === 0) {\n    const errorMessage = createNotification(\n      'Error',\n      'Invalid position',\n      'error',\n    );\n\n    pushNotification(errorMessage);\n\n    return;\n  }\n\n  if (inputAge.value.trim().length === 0) {\n    const errorMessage = createNotification(\n      'Error',\n      \"Please enter the employee's age\",\n      'error',\n    );\n\n    pushNotification(errorMessage);\n\n    return;\n  }\n\n  const age = parseInt(inputAge.value);\n\n  if (age < 18 || age > 90) {\n    const errorMessage = createNotification(\n      'Error',\n      'The employee must be between 18 and 90 years old',\n      'error',\n    );\n\n    pushNotification(errorMessage);\n\n    return;\n  }\n\n  if (inputSalary.value.trim().length === 0) {\n    const errorMessage = createNotification(\n      'Error',\n      \"Please enter the employee's salary\",\n      'error',\n    );\n\n    pushNotification(errorMessage);\n\n    return;\n  }\n\n  const salary = parseInt(inputSalary.value);\n\n  if (salary < 0) {\n    const errorMessage = createNotification(\n      'Error',\n      'Salary cannot be a negative number',\n      'error',\n    );\n\n    pushNotification(errorMessage);\n\n    return;\n  }\n\n  const rowHtml = `\n  <tr>\n    <td>${inputName.value}</td>\n    <td>${inputPos.value}</td>\n    <td>${selectCity.value.split('-').join(' ')}</td>\n    <td>${inputAge.value}</td>\n    <td>$${formatNumberWithCommas(inputSalary.value)}</td>\n  </tr>\n`;\n\n  tableBody.insertAdjacentHTML('beforeend', rowHtml);\n  newEmployeeForm.reset();\n\n  const message = createNotification(\n    'Success',\n    'Employee was successfully added',\n    'success',\n  );\n\n  pushNotification(message);\n});\n\ntableBody.addEventListener('click', (e) => {\n  const selectedRow = e.target.closest('tr');\n  const bodyRows = tableBody.querySelectorAll('tr');\n\n  bodyRows.forEach((row) => row.classList.remove('active'));\n  selectedRow.classList.add('active');\n});\n\ntableBody.addEventListener('dblclick', (e) => {\n  if (e.target.tagName === 'TD') {\n    const input = document.createElement('input');\n    const currText = e.target.textContent;\n\n    input.type = 'text';\n    input.classList.add('cell-input');\n\n    input.value = currText;\n    e.target.textContent = '';\n    e.target.append(input);\n\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      e.target.textContent = input.value || currText;\n      input.remove();\n    });\n\n    input.addEventListener('keypress', (keyPressEvent) => {\n      if (keyPressEvent.key === 'Enter') {\n        e.target.textContent = input.value || currText;\n        input.remove();\n      }\n    });\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","createNotification","title","description","type","message","document","createElement","titleElement","descriptionElement","dataset","qa","classList","add","innerText","style","whiteSpace","append","pushNotification","body","setTimeout","display","prevHeader","isASCOrder","table","querySelector","tableHead","tableBody","sortHandler","e","target","tagName","clickedIndex","cellIndex","isNumericSort","sortedRows","_to_consumable_array","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","rowA","rowB","cellA","children","textContent","trim","cellB","compareResult","replace","localeCompare","forEach","row","addEventListener","insertAdjacentHTML","selectOffice","optionsHtml","selectOptions","value","text","map","city","concat","join","innerHTML","newEmployeeForm","inputName","inputPos","selectCity","inputAge","inputSalary","submitBtn","preventDefault","age","parseInt","salary","rowHtml","split","reset","selectedRow","closest","bodyRows","remove","input","currText","focus","keyPressEvent","key"],"version":3,"file":"index.39296831.js.map"}